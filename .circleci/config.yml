# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/clojure:1.11.1-openjdk-17.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: lein deps

      # run tests!
      - run: lein test-coverage
      - run: lein lint

      - run:
          name: Install static code analysis tools
          environment:
            CLJSTYLE_VERSION: 0.15.0
            CLJ_KONDO_VERSION: 2023.12.15
            JOKER_VERSION: 1.3.4
          command: |
            # cljstyle
            wget https://github.com/greglook/cljstyle/releases/download/${CLJSTYLE_VERSION}/cljstyle_${CLJSTYLE_VERSION}_linux.tar.gz
            tar -xzf cljstyle_${CLJSTYLE_VERSION}_linux.tar.gz
            sudo mv -f cljstyle /usr/local/bin/
            # clj-kondo
            curl -sLO https://raw.githubusercontent.com/borkdude/clj-kondo/master/script/install-clj-kondo
            chmod +x install-clj-kondo
            sudo ./install-clj-kondo --version ${CLJ_KONDO_VERSION}
            # Joker
            wget https://github.com/candid82/joker/releases/download/v${JOKER_VERSION}/joker-linux-amd64.zip
            unzip -qq joker-linux-amd64.zip
            sudo mv -f joker /usr/local/bin/
      - run: make lint

      - run: bash <(curl -s https://codecov.io/bash) -f '!*.txt'

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/clojure-test
            if [ -f target/coverage/junit.xml ]; then
              cp target/coverage/junit.xml ~/test-results/clojure-test/
            fi
          when: always
      - store_test_results:
          path: ~/test-results
